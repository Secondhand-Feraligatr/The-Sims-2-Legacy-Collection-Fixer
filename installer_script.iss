; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "The Sims 2 Legacy Collection Fixer"
#define MyAppVersion "1.2"
#define MyAppPublisher "SecondhandFeraligatr / CroconawSims"
#define MyAppURL "https://modthesims.info/member.php?u=10269790"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{E13EB8E2-D9CE-4381-870B-E8E2830007E4}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={commonpf}\The Sims 2 Legacy Collection
Uninstallable=no
CreateUninstallRegKey=no
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
; Uncomment the following line to run in non administrative install mode (install for current user only).
;PrivilegesRequired=lowest
OutputBaseFilename=mysetup
SetupIconFile=C:\Users\Zachary.Kraus\Documents\GitHub\Fixer\job_H5Q_icon-1.ico
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "C:\Users\Zachary.Kraus\Documents\GitHub\Fixer\files\Base\TSData\Res\Catalog\Bins\*"; DestDir: "{app}\Base\TSData\Res\Catalog\Bins"; Flags: ignoreversion recursesubdirs uninsneveruninstall replacesameversion uninsrestartdelete
Source: "C:\Users\Zachary.Kraus\Documents\GitHub\Fixer\files\Base\TSData\Res\Catalog\Skins\*"; DestDir: "{app}\Base\TSData\Res\Catalog\Skins"; Flags: ignoreversion recursesubdirs uninsneveruninstall replacesameversion uninsrestartdelete
Source: "C:\Users\Zachary.Kraus\Documents\GitHub\Fixer\files\EP1\TSData\Res\Sound\*"; DestDir: "{app}\EP1\TSData\Res\Sound"; Flags: ignoreversion recursesubdirs uninsneveruninstall replacesameversion uninsrestartdelete
Source: "C:\Users\Zachary.Kraus\Documents\GitHub\Fixer\files\EP6\TSData\Res\Sound\*"; DestDir: "{app}\EP6\TSData\Res\Sound"; Flags: ignoreversion recursesubdirs uninsneveruninstall replacesameversion uninsrestartdelete
Source: "C:\Users\Zachary.Kraus\Documents\GitHub\Fixer\files\EP8\TSData\Res\Sound\*"; DestDir: "{app}\EP8\TSData\Res\Sound"; Flags: ignoreversion recursesubdirs uninsneveruninstall replacesameversion uninsrestartdelete
Source: "C:\Users\Zachary.Kraus\Documents\GitHub\Fixer\files\EP9\TSData\Res\Sound\*"; DestDir: "{app}\EP9\TSData\Res\Sound"; Flags: ignoreversion recursesubdirs uninsneveruninstall replacesameversion uninsrestartdelete
Source: "C:\Users\Zachary.Kraus\Documents\GitHub\Fixer\files\EP9\TSData\Res\Text\*"; DestDir: "{app}\EP9\TSData\Res\Text"; Flags: ignoreversion recursesubdirs uninsneveruninstall replacesameversion uninsrestartdelete
Source: "C:\Users\Zachary.Kraus\Documents\GitHub\Fixer\files\EP9\TSBin\*"; DestDir: "{app}\EP9\TSBin"; Flags: ignoreversion recursesubdirs uninsneveruninstall replacesameversion uninsrestartdelete
Source: "C:\Users\Zachary.Kraus\Documents\GitHub\Fixer\files\SP5\TSData\Res\Sound\*"; DestDir: "{app}\SP5\TSData\Res\Sound"; Flags: ignoreversion recursesubdirs uninsneveruninstall replacesameversion uninsrestartdelete
Source: "C:\Users\Zachary.Kraus\Documents\GitHub\Fixer\files\SP6\TSData\Res\Sound\*"; DestDir: "{app}\SP6\TSData\Res\Sound"; Flags: ignoreversion recursesubdirs uninsneveruninstall replacesameversion uninsrestartdelete
Source: "C:\Users\Zachary.Kraus\Documents\GitHub\Fixer\files\SP7\TSData\Res\Sound\*"; DestDir: "{app}\SP7\TSData\Res\Sound"; Flags: ignoreversion recursesubdirs uninsneveruninstall replacesameversion uninsrestartdelete
Source: "C:\Users\Zachary.Kraus\Documents\GitHub\Fixer\files\SP8\*"; DestDir: "{app}\SP8"; Flags: ignoreversion recursesubdirs uninsneveruninstall replacesameversion uninsrestartdelete

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Code]
var
  InstallDirPage: TInputOptionWizardPage;

procedure InitializeWizard;
begin
  // Create a selection page for install location BEFORE directory selection
  InstallDirPage := CreateInputOptionPage(
    wpWelcome,  // Ensures this runs before the default directory selection
    'Choose Install Location', 
    '',  // No extra instructions
    '', 
    True, False);  // `True` ensures only one option can be selected

  InstallDirPage.Add('Default Steam Install Location (C:\Program Files (x86)\Steam\steamapps\common\The Sims 2 Legacy Collection)');
  InstallDirPage.Add('Default EA App Install Location (C:\Program Files\EA Games\The Sims 2 Legacy Collection)');
  InstallDirPage.Add('Custom Install Location (Choose manually)');

  InstallDirPage.SelectedValueIndex := 0; // Default to Steam
end;

function NextButtonClick(CurPageID: Integer): Boolean;
var
  CustomPath: string;
begin
  Result := True;

  if CurPageID = InstallDirPage.ID then
  begin
    case InstallDirPage.SelectedValueIndex of
      0: WizardForm.DirEdit.Text := 'C:\Program Files (x86)\Steam\steamapps\common\The Sims 2 Legacy Collection';
      1: WizardForm.DirEdit.Text := 'C:\Program Files\EA Games\The Sims 2 Legacy Collection';
      2: begin
           // Prompt the user for a custom folder
           if BrowseForFolder('Select the root folder for The Sims 2 Legacy Collection:', CustomPath, False) then
             WizardForm.DirEdit.Text := CustomPath
           else
           begin
             MsgBox('You must select a valid install folder.', mbError, MB_OK);
             Result := False; // Stop the user from proceeding if they cancel the dialog
           end;
         end;
    end;
  end;
end;

procedure SetFileAttributes(FileName: string; Attributes: Integer);
external 'SetFileAttributesW@kernel32.dll stdcall';

procedure SetFileReadOnly(FilePath: string);
begin
  if FileExists(FilePath) then
  begin
    SetFileAttributes(FilePath, FILE_ATTRIBUTE_READONLY); // Set file to read-only
  end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep = ssPostInstall then
  begin
    SetFileReadOnly(ExpandConstant('{app}\Base\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\EP1\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\EP2\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\EP3\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\EP4\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\EP5\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\EP6\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\EP7\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\EP8\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\EP9\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\SP1\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\SP2\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\SP3\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\SP4\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\SP5\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\SP6\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\SP7\TSData\Res\Objects\Objects.package'));
    SetFileReadOnly(ExpandConstant('{app}\SP8\TSData\Res\Objects\Objects.package'));
    // Add more files as needed
  end;
end;